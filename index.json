[{"categories":["tricks"],"content":"Some basics about setting up a development environment on MacOS. ","date":"2023-10-04","objectID":"/macos-setup/:0:0","series":[],"tags":["MacOS"],"title":"MacOS Setup","uri":"/macos-setup/#"},{"categories":["tricks"],"content":" XcodeIn the terminal, run sudo xcode-select --install ","date":"2023-10-04","objectID":"/macos-setup/:1:0","series":[],"tags":["MacOS"],"title":"MacOS Setup","uri":"/macos-setup/#xcode"},{"categories":["tricks"],"content":" Homebrew /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\" ","date":"2023-10-04","objectID":"/macos-setup/:2:0","series":[],"tags":["MacOS"],"title":"MacOS Setup","uri":"/macos-setup/#homebrew"},{"categories":["tricks"],"content":" Oh My ZshInstall Zsh first: brew install zsh Then install Oh My Zsh: sh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\" ","date":"2023-10-04","objectID":"/macos-setup/:3:0","series":[],"tags":["MacOS"],"title":"MacOS Setup","uri":"/macos-setup/#oh-my-zsh"},{"categories":["tricks"],"content":" PluginsEdit ~/.zshrc: plugins=( sudo extract autojump zsh-autosuggestions zsh-syntax-highlighting ) sudoPress ESC twice to add sudo to the beginning of the command. extractUse x abc.zip to extract abc.zip. It supports almost all compressed formats. autojump brew install autojump Follow the instructions to add the following line to ~/.zshrc: # \u003e\u003e\u003e autojump initialize \u003e\u003e\u003e [ -f /opt/homebrew/etc/profile.d/autojump.sh ] \u0026\u0026 . /opt/homebrew/etc/profile.d/autojump.sh # \u003c\u003c\u003c autojump initialize \u003c\u003c\u003c Use j to jump to the matching directory. j \u003ckeyword\u003e zsh-autosuggestionsauto-suggestion for zsh. It suggests commands based on your command history. git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions zsh-syntax-highlightingSyntax highlighting for zsh. It should be the last plugin in the plugins list. git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting ","date":"2023-10-04","objectID":"/macos-setup/:3:1","series":[],"tags":["MacOS"],"title":"MacOS Setup","uri":"/macos-setup/#plugins"},{"categories":["tricks"],"content":" PluginsEdit ~/.zshrc: plugins=( sudo extract autojump zsh-autosuggestions zsh-syntax-highlighting ) sudoPress ESC twice to add sudo to the beginning of the command. extractUse x abc.zip to extract abc.zip. It supports almost all compressed formats. autojump brew install autojump Follow the instructions to add the following line to ~/.zshrc: # \u003e\u003e\u003e autojump initialize \u003e\u003e\u003e [ -f /opt/homebrew/etc/profile.d/autojump.sh ] \u0026\u0026 . /opt/homebrew/etc/profile.d/autojump.sh # \u003c\u003c\u003c autojump initialize \u003c\u003c\u003c Use j to jump to the matching directory. j zsh-autosuggestionsauto-suggestion for zsh. It suggests commands based on your command history. git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions zsh-syntax-highlightingSyntax highlighting for zsh. It should be the last plugin in the plugins list. git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting ","date":"2023-10-04","objectID":"/macos-setup/:3:1","series":[],"tags":["MacOS"],"title":"MacOS Setup","uri":"/macos-setup/#sudo"},{"categories":["tricks"],"content":" PluginsEdit ~/.zshrc: plugins=( sudo extract autojump zsh-autosuggestions zsh-syntax-highlighting ) sudoPress ESC twice to add sudo to the beginning of the command. extractUse x abc.zip to extract abc.zip. It supports almost all compressed formats. autojump brew install autojump Follow the instructions to add the following line to ~/.zshrc: # \u003e\u003e\u003e autojump initialize \u003e\u003e\u003e [ -f /opt/homebrew/etc/profile.d/autojump.sh ] \u0026\u0026 . /opt/homebrew/etc/profile.d/autojump.sh # \u003c\u003c\u003c autojump initialize \u003c\u003c\u003c Use j to jump to the matching directory. j zsh-autosuggestionsauto-suggestion for zsh. It suggests commands based on your command history. git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions zsh-syntax-highlightingSyntax highlighting for zsh. It should be the last plugin in the plugins list. git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting ","date":"2023-10-04","objectID":"/macos-setup/:3:1","series":[],"tags":["MacOS"],"title":"MacOS Setup","uri":"/macos-setup/#extract"},{"categories":["tricks"],"content":" PluginsEdit ~/.zshrc: plugins=( sudo extract autojump zsh-autosuggestions zsh-syntax-highlighting ) sudoPress ESC twice to add sudo to the beginning of the command. extractUse x abc.zip to extract abc.zip. It supports almost all compressed formats. autojump brew install autojump Follow the instructions to add the following line to ~/.zshrc: # \u003e\u003e\u003e autojump initialize \u003e\u003e\u003e [ -f /opt/homebrew/etc/profile.d/autojump.sh ] \u0026\u0026 . /opt/homebrew/etc/profile.d/autojump.sh # \u003c\u003c\u003c autojump initialize \u003c\u003c\u003c Use j to jump to the matching directory. j zsh-autosuggestionsauto-suggestion for zsh. It suggests commands based on your command history. git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions zsh-syntax-highlightingSyntax highlighting for zsh. It should be the last plugin in the plugins list. git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting ","date":"2023-10-04","objectID":"/macos-setup/:3:1","series":[],"tags":["MacOS"],"title":"MacOS Setup","uri":"/macos-setup/#autojump"},{"categories":["tricks"],"content":" PluginsEdit ~/.zshrc: plugins=( sudo extract autojump zsh-autosuggestions zsh-syntax-highlighting ) sudoPress ESC twice to add sudo to the beginning of the command. extractUse x abc.zip to extract abc.zip. It supports almost all compressed formats. autojump brew install autojump Follow the instructions to add the following line to ~/.zshrc: # \u003e\u003e\u003e autojump initialize \u003e\u003e\u003e [ -f /opt/homebrew/etc/profile.d/autojump.sh ] \u0026\u0026 . /opt/homebrew/etc/profile.d/autojump.sh # \u003c\u003c\u003c autojump initialize \u003c\u003c\u003c Use j to jump to the matching directory. j zsh-autosuggestionsauto-suggestion for zsh. It suggests commands based on your command history. git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions zsh-syntax-highlightingSyntax highlighting for zsh. It should be the last plugin in the plugins list. git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting ","date":"2023-10-04","objectID":"/macos-setup/:3:1","series":[],"tags":["MacOS"],"title":"MacOS Setup","uri":"/macos-setup/#zsh-autosuggestions"},{"categories":["tricks"],"content":" PluginsEdit ~/.zshrc: plugins=( sudo extract autojump zsh-autosuggestions zsh-syntax-highlighting ) sudoPress ESC twice to add sudo to the beginning of the command. extractUse x abc.zip to extract abc.zip. It supports almost all compressed formats. autojump brew install autojump Follow the instructions to add the following line to ~/.zshrc: # \u003e\u003e\u003e autojump initialize \u003e\u003e\u003e [ -f /opt/homebrew/etc/profile.d/autojump.sh ] \u0026\u0026 . /opt/homebrew/etc/profile.d/autojump.sh # \u003c\u003c\u003c autojump initialize \u003c\u003c\u003c Use j to jump to the matching directory. j zsh-autosuggestionsauto-suggestion for zsh. It suggests commands based on your command history. git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions zsh-syntax-highlightingSyntax highlighting for zsh. It should be the last plugin in the plugins list. git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting ","date":"2023-10-04","objectID":"/macos-setup/:3:1","series":[],"tags":["MacOS"],"title":"MacOS Setup","uri":"/macos-setup/#zsh-syntax-highlighting"},{"categories":["tricks"],"content":" ThemeI prefer the powerlevel10k theme. One can find the installation instructions here. clone the repository git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k Set ZSH_THEME=\"powerlevel10k/powerlevel10k\" in ~/.zshrc. Run p10k configure to configure the theme. (It will be automatically run when you open a new terminal window. I prefer not to install the recommended fonts.) ","date":"2023-10-04","objectID":"/macos-setup/:3:2","series":[],"tags":["MacOS"],"title":"MacOS Setup","uri":"/macos-setup/#theme"},{"categories":["tricks"],"content":" High-efficiency software","date":"2023-10-04","objectID":"/macos-setup/:4:0","series":[],"tags":["MacOS"],"title":"MacOS Setup","uri":"/macos-setup/#high-efficiency-software"},{"categories":["tricks"],"content":" iTerm2 brew install --cask iterm2 ","date":"2023-10-04","objectID":"/macos-setup/:4:1","series":[],"tags":["MacOS"],"title":"MacOS Setup","uri":"/macos-setup/#iterm2"},{"categories":["tricks"],"content":" tldrtldr is a community effort to simplify the beloved man pages with practical examples. brew install tldr To use it, run tldr \u003ccommand\u003e ","date":"2023-10-04","objectID":"/macos-setup/:4:2","series":[],"tags":["MacOS"],"title":"MacOS Setup","uri":"/macos-setup/#tldr"},{"categories":["tricks"],"content":" the-unarchiverthe-unarchiver is a free data decompression utility, which supports more formats than the built-in Archive Utility. It can be used to open .rar files. brew install --cask the-unarchiver ","date":"2023-10-04","objectID":"/macos-setup/:4:3","series":[],"tags":["MacOS"],"title":"MacOS Setup","uri":"/macos-setup/#the-unarchiver"},{"categories":["tricks"],"content":" treetree is a recursive directory listing command that produces a depth indented listing of files. brew install tree ","date":"2023-10-04","objectID":"/macos-setup/:4:4","series":[],"tags":["MacOS"],"title":"MacOS Setup","uri":"/macos-setup/#tree"},{"categories":["tricks"],"content":" .gitignoreSet the global .gitignore file: curl https://raw.githubusercontent.com/github/gitignore/master/Global/macOS.gitignore -o ~/.gitignore Config git to use the global .gitignore file: git config --global core.excludesfile ~/.gitignore visit gitignore to generate a .gitignore file for your project. ","date":"2023-10-04","objectID":"/macos-setup/:5:0","series":[],"tags":["MacOS"],"title":"MacOS Setup","uri":"/macos-setup/#gitignore"},{"categories":["tricks"],"content":" condaSee conda-basics for more details. ","date":"2023-10-04","objectID":"/macos-setup/:6:0","series":[],"tags":["MacOS"],"title":"MacOS Setup","uri":"/macos-setup/#conda"},{"categories":["tricks"],"content":"Some basics about Git and GitHub. Although there are many tutorials online, I still want to record some of them here for my own reference. ","date":"2023-09-10","objectID":"/git-basics/:0:0","series":[],"tags":["git, github"],"title":"Git Basics","uri":"/git-basics/#"},{"categories":["tricks"],"content":" Some References Git and GitHub (Concise) Git 与代码管理 (Good!) ","date":"2023-09-10","objectID":"/git-basics/:1:0","series":[],"tags":["git, github"],"title":"Git Basics","uri":"/git-basics/#some-references"},{"categories":["tricks"],"content":" Configure Git git config --global user.name \"Your Name Here\" git config --global user.email \"your_email@youremail.com\" NOTE: your_email@@youremail.com should be the noreply email address of your GitHub account. ","date":"2023-09-10","objectID":"/git-basics/:2:0","series":[],"tags":["git, github"],"title":"Git Basics","uri":"/git-basics/#configure-git"},{"categories":["tricks"],"content":" Git Clone git clone https://github.com/\u003cusername\u003e/\u003crepo-name\u003e.git # https git clone git@github.com:\u003cusername\u003e/\u003crepo-name\u003e.git # SSH ","date":"2023-09-10","objectID":"/git-basics/:3:0","series":[],"tags":["git, github"],"title":"Git Basics","uri":"/git-basics/#git-clone"},{"categories":["tricks"],"content":" SSH Config for GitHubMake sure you have generated an SSH key pair on your local machine. ","date":"2023-09-10","objectID":"/git-basics/:4:0","series":[],"tags":["git, github"],"title":"Git Basics","uri":"/git-basics/#ssh-config-for-github"},{"categories":["tricks"],"content":" Add a new SSH public key to your GitHub accountSee GitHub documents ","date":"2023-09-10","objectID":"/git-basics/:4:1","series":[],"tags":["git, github"],"title":"Git Basics","uri":"/git-basics/#add-a-new-ssh-public-key-to-your-github-account"},{"categories":["tricks"],"content":" Test SSH connection ssh -T git@github.com ","date":"2023-09-10","objectID":"/git-basics/:4:2","series":[],"tags":["git, github"],"title":"Git Basics","uri":"/git-basics/#test-ssh-connection"},{"categories":["tricks"],"content":" Some Useful Commands","date":"2023-09-10","objectID":"/git-basics/:5:0","series":[],"tags":["git, github"],"title":"Git Basics","uri":"/git-basics/#some-useful-commands"},{"categories":["tricks"],"content":" Remove all .DS_Store files recursivelyDelete all .DS_Store files recursively and print the path of each deleted file: find . -name \".DS_Store\" -print -delete ","date":"2023-09-10","objectID":"/git-basics/:5:1","series":[],"tags":["git, github"],"title":"Git Basics","uri":"/git-basics/#remove-all-ds_store-files-recursively"},{"categories":["tricks"],"content":" Generate a timestampUse the following code snippet to generate the current timestamp in the format of YYYY-MM-DD HH:MM:SS-07:00: timestamp=$(date +\"%Y-%m-%dT%H:%M:%S\") offset=$(date +%z) formatted_offset=${offset:0:3}:${offset:3:2} echo \"${timestamp}${formatted_offset}\" ","date":"2023-09-10","objectID":"/git-basics/:5:2","series":[],"tags":["git, github"],"title":"Git Basics","uri":"/git-basics/#generate-a-timestamp"},{"categories":["tricks"],"content":"mamba is a package manager for Python. It is a reimplementation of conda in C++. The syntax is the same as conda, but it is much faster. It is recommended to use mamba instead of conda for package management. It is recommended to create a new environment for each project and leave the base environment untouched. In the following, we assume the environment name is cs101. ","date":"2023-08-09","objectID":"/conda-basics/:0:0","series":[],"tags":["mamba"],"title":"Mamba Basics","uri":"/conda-basics/#"},{"categories":["tricks"],"content":" Uninstall Anaconda/minicondaSee Uninstalling Anaconda for more details. ","date":"2023-08-09","objectID":"/conda-basics/:1:0","series":[],"tags":["mamba"],"title":"Mamba Basics","uri":"/conda-basics/#uninstall-anacondaminiconda"},{"categories":["tricks"],"content":" Install MambaforgeSee Mambaforge for more details. For Linux and macOS: curl -L -O \"https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-$(uname)-$(uname -m).sh\" bash Mambaforge-$(uname)-$(uname -m).sh For Windows: Download the installer from Mambaforge and run it. Enable the options to “Create start menu shortcuts” and “Add Miniforge3 to my PATH environment variable”. Open a miniforge Prompt from Start Menu. Now Try: conda init powershell ","date":"2023-08-09","objectID":"/conda-basics/:2:0","series":[],"tags":["mamba"],"title":"Mamba Basics","uri":"/conda-basics/#install-mambaforge"},{"categories":["tricks"],"content":" Prevent mamba from activating the base environment automatically mamba config --set auto_activate_base false ","date":"2023-08-09","objectID":"/conda-basics/:3:0","series":[],"tags":["mamba"],"title":"Mamba Basics","uri":"/conda-basics/#prevent-mamba-from-activating-the-base-environment-automatically"},{"categories":["tricks"],"content":" Add Mambaforge to VS CodeAdd the following lines to settings.json: \"python.condaPath\": \"~/mambaforge/condabin/conda\", \"python.defaultInterpreterPath\": \"~/mambaforge/envs/cs101/bin/python\", ","date":"2023-08-09","objectID":"/conda-basics/:4:0","series":[],"tags":["mamba"],"title":"Mamba Basics","uri":"/conda-basics/#add-mambaforge-to-vs-code"},{"categories":["tricks"],"content":" Create a New Environment mamba create -n cs101 ","date":"2023-08-09","objectID":"/conda-basics/:5:0","series":[],"tags":["mamba"],"title":"Mamba Basics","uri":"/conda-basics/#create-a-new-environment"},{"categories":["tricks"],"content":" Activate an Environment mamba activate cs101 ","date":"2023-08-09","objectID":"/conda-basics/:6:0","series":[],"tags":["mamba"],"title":"Mamba Basics","uri":"/conda-basics/#activate-an-environment"},{"categories":["tricks"],"content":" Install common packages for scientific computing mamba install -y numpy matplotlib scipy pandas sympy numba jupyterlab plotly pytest ","date":"2023-08-09","objectID":"/conda-basics/:7:0","series":[],"tags":["mamba"],"title":"Mamba Basics","uri":"/conda-basics/#install-common-packages-for-scientific-computing"},{"categories":["tricks"],"content":" Use pip to install packages not available in Anaconda pip install rocket-fft ","date":"2023-08-09","objectID":"/conda-basics/:8:0","series":[],"tags":["mamba"],"title":"Mamba Basics","uri":"/conda-basics/#use-pip-to-install-packages-not-available-in-anaconda"},{"categories":["tricks"],"content":" Install local modules/packages pip install -e . In this way, the package will be installed in the current environment and the changes will be reflected immediately. ","date":"2023-08-09","objectID":"/conda-basics/:9:0","series":[],"tags":["mamba"],"title":"Mamba Basics","uri":"/conda-basics/#install-local-modulespackages"},{"categories":["tricks"],"content":" Deactivate an Environment mamba deactivate ","date":"2023-08-09","objectID":"/conda-basics/:10:0","series":[],"tags":["mamba"],"title":"Mamba Basics","uri":"/conda-basics/#deactivate-an-environment"},{"categories":["tricks"],"content":" List All Environments mamba env list ","date":"2023-08-09","objectID":"/conda-basics/:11:0","series":[],"tags":["mamba"],"title":"Mamba Basics","uri":"/conda-basics/#list-all-environments"},{"categories":["tricks"],"content":" Remove an Environment mamba remove -n cs101 --all ","date":"2023-08-09","objectID":"/conda-basics/:12:0","series":[],"tags":["mamba"],"title":"Mamba Basics","uri":"/conda-basics/#remove-an-environment"},{"categories":["tricks"],"content":"SSH is a protocol that allows you to connect to a remote computer. It is widely used in remote computing, such as connecting to a remote server or running Jupyter Lab in a remote host. ","date":"2023-08-09","objectID":"/ssh-basics/:0:0","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#"},{"categories":["tricks"],"content":" Create an SSH key pair","date":"2023-08-09","objectID":"/ssh-basics/:1:0","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#create-an-ssh-key-pair"},{"categories":["tricks"],"content":" Check for existing SSH keysFirst check for existing SSH keys on your computer by running: ls -al ~/.ssh # Lists the files in your .ssh directory, if they exist Check the directory listing to see if you have files named either id_ed25519.pub or id_ed25519.pub. If you don’t have either of those files then read on, otherwise skip the next section. ","date":"2023-08-09","objectID":"/ssh-basics/:1:1","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#check-for-existing-ssh-keys"},{"categories":["tricks"],"content":" Generate a new SSH key Open Terminal. Paste the text below, substituting in your GitHub email address. This creates a new ssh key, using the provided email as a label. ssh-keygen -t ed25519 -C \"your_email@example.com\" ","date":"2023-08-09","objectID":"/ssh-basics/:1:2","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#generate-a-new-ssh-key"},{"categories":["tricks"],"content":" Add your SSH key to the ssh-agent Start the ssh-agent in the background. eval \"$(ssh-agent -s)\" Add your SSH private key to the ssh-agent. If you created your key with a different name, or if you are adding an existing key that has a different name, replace id_ed25519 in the command with the name of your private key file. ssh-add ~/.ssh/id_ed25519 ","date":"2023-08-09","objectID":"/ssh-basics/:1:3","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#add-your-ssh-key-to-the-ssh-agent"},{"categories":["tricks"],"content":" SSH Access to Windows","date":"2023-08-09","objectID":"/ssh-basics/:2:0","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#ssh-access-to-windows"},{"categories":["tricks"],"content":" Creating an SSH Key in Local SSH ClientFor a detailed explanation, refer to my previous post. In summary: Generate a key pair in the local SSH client. Activate the ssh-agent and link the private key to it. In Windows, this process can be executed in PowerShell: # Generate a key pair ssh-keygen -t ed25519 # By default, the ssh-agent service is disabled. Configure it to start automatically. Ensure you're running as an Administrator. Get-Service ssh-agent | Set-Service -StartupType Automatic # Activate the service Start-Service ssh-agent # This should return a status of Running Get-Service ssh-agent # Load your key files into ssh-agent ssh-add $env:USERPROFILE\\.ssh\\id_ed25519 ","date":"2023-08-09","objectID":"/ssh-basics/:2:1","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#creating-an-ssh-key-in-local-ssh-client"},{"categories":["tricks"],"content":" Starting SSHD on the Remote Host # Set the sshd service to start automatically Get-Service -Name sshd | Set-Service -StartupType Automatic # Activate the sshd service Start-Service sshd ","date":"2023-08-09","objectID":"/ssh-basics/:2:2","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#starting-sshd-on-the-remote-host"},{"categories":["tricks"],"content":" Deploying the Public Key to the Remote HostYour public key, \\.ssh\\id_ed25519.pub, should be placed on the server in a text file named administrators_authorized_keys located in C:\\ProgramData\\ssh\\. ","date":"2023-08-09","objectID":"/ssh-basics/:2:3","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#deploying-the-public-key-to-the-remote-host"},{"categories":["tricks"],"content":" Configuring the default shell for OpenSSH in WindowsFor example, to use PowerShell as the default shell: New-ItemProperty -Path \"HKLM:\\SOFTWARE\\OpenSSH\" -Name DefaultShell -Value \"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" -PropertyType String -Force ","date":"2023-08-09","objectID":"/ssh-basics/:2:4","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#configuring-the-default-shell-for-openssh-in-windows"},{"categories":["tricks"],"content":" Windows ConfigurationsIn Windows, sshd reads configuration data from `%programdata%\\ssh\\sshd_config`` by default. You can modify the configuration file to change the default port, for example: # Port 22 is the default port for SSH Port 22 You can also disable password authentication to prevent brute-force attacks: # Disable password authentication PasswordAuthentication no You can enable public key authentication: # Enable public key authentication PubkeyAuthentication yes ","date":"2023-08-09","objectID":"/ssh-basics/:2:5","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#windows-configurations"},{"categories":["tricks"],"content":" Connecting to Windows in terminal ssh \u003cusername\u003e@\u003chostname\u003e ","date":"2023-08-09","objectID":"/ssh-basics/:2:6","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#connecting-to-windows-in-terminal"},{"categories":["tricks"],"content":" Connecting to Windows in VS CodeTo connect, you need to know the username and hostname of the remote host. Determining the UsernameThe username typically matches the account name of the remote host, retrievable by: echo $env:USERNAME However, if you’re using a Microsoft account to log in, the username might be the associated email address. Determining the HostnameThe hostname, which is the IP address of the remote host, can be retrieved with: ipconfig If it doesn’t workTry enable Port 22 netsh advfirewall firewall add rule name=\"Open SSH Port 22\" dir=in action=allow protocol=TCP localport=22 remoteip=any Try enabling Remote server listen on socket in VS Code. ","date":"2023-08-09","objectID":"/ssh-basics/:2:7","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#connecting-to-windows-in-vs-code"},{"categories":["tricks"],"content":" Connecting to Windows in VS CodeTo connect, you need to know the username and hostname of the remote host. Determining the UsernameThe username typically matches the account name of the remote host, retrievable by: echo $env:USERNAME However, if you’re using a Microsoft account to log in, the username might be the associated email address. Determining the HostnameThe hostname, which is the IP address of the remote host, can be retrieved with: ipconfig If it doesn’t workTry enable Port 22 netsh advfirewall firewall add rule name=\"Open SSH Port 22\" dir=in action=allow protocol=TCP localport=22 remoteip=any Try enabling Remote server listen on socket in VS Code. ","date":"2023-08-09","objectID":"/ssh-basics/:2:7","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#determining-the-username"},{"categories":["tricks"],"content":" Connecting to Windows in VS CodeTo connect, you need to know the username and hostname of the remote host. Determining the UsernameThe username typically matches the account name of the remote host, retrievable by: echo $env:USERNAME However, if you’re using a Microsoft account to log in, the username might be the associated email address. Determining the HostnameThe hostname, which is the IP address of the remote host, can be retrieved with: ipconfig If it doesn’t workTry enable Port 22 netsh advfirewall firewall add rule name=\"Open SSH Port 22\" dir=in action=allow protocol=TCP localport=22 remoteip=any Try enabling Remote server listen on socket in VS Code. ","date":"2023-08-09","objectID":"/ssh-basics/:2:7","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#determining-the-hostname"},{"categories":["tricks"],"content":" Connecting to Windows in VS CodeTo connect, you need to know the username and hostname of the remote host. Determining the UsernameThe username typically matches the account name of the remote host, retrievable by: echo $env:USERNAME However, if you’re using a Microsoft account to log in, the username might be the associated email address. Determining the HostnameThe hostname, which is the IP address of the remote host, can be retrieved with: ipconfig If it doesn’t workTry enable Port 22 netsh advfirewall firewall add rule name=\"Open SSH Port 22\" dir=in action=allow protocol=TCP localport=22 remoteip=any Try enabling Remote server listen on socket in VS Code. ","date":"2023-08-09","objectID":"/ssh-basics/:2:7","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#if-it-doesnt-work"},{"categories":["tricks"],"content":" SSH Access to WSL2For a comprehensive guide, refer here. Since Windows uses port 22 by default for SSH, consider changing the SSH port in WSL2 to 2222 to prevent conflicts. ","date":"2023-08-09","objectID":"/ssh-basics/:3:0","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#ssh-access-to-wsl2"},{"categories":["tricks"],"content":" On the Remote Host (WSL2) # Install openssh-server sudo apt install openssh-server # Modify the SSH configuration to use port 2222 sudo sed -i -E 's,^#?Port.*$,Port 2222,' /etc/ssh/sshd_config sudo service ssh restart # Allow passwordless sudo for the current user to start the SSH service sudo sh -c \"echo '${USER} ALL=(root) NOPASSWD: /usr/sbin/service ssh start' \u003e/etc/sudoers.d/service-ssh-start\" # Start the SSH service without requiring a password sudo /usr/sbin/service ssh start ","date":"2023-08-09","objectID":"/ssh-basics/:3:1","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#on-the-remote-host-wsl2"},{"categories":["tricks"],"content":" On the Remote Host (Windows) Unblock Port 2222 New-NetFirewallRule -Name sshd -DisplayName 'OpenSSH Server (sshd) for WSL' -Enabled True -Direction Inbound -Protocol TCP -Action Allow -LocalPort 2222 Automatically Start SSHD ServiceCreate a CMD script to initiate the SSHD service in WSL2. @echo off setlocal C:\\Windows\\System32\\bash.exe -c \"sudo /usr/sbin/service ssh start\" C:\\Windows\\System32\\netsh.exe interface portproxy delete v4tov4 listenport=2022 listenaddress=0.0.0.0 protocol=tcp for /f %%i in ('wsl hostname -I') do set IP=%%i C:\\Windows\\System32\\netsh.exe interface portproxy add v4tov4 listenport=2022 listenaddress=0.0.0.0 connectport=2022 connectaddress=%IP% endlocal ","date":"2023-08-09","objectID":"/ssh-basics/:3:2","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#on-the-remote-host-windows"},{"categories":["tricks"],"content":" On the Remote Host (Windows) Unblock Port 2222 New-NetFirewallRule -Name sshd -DisplayName 'OpenSSH Server (sshd) for WSL' -Enabled True -Direction Inbound -Protocol TCP -Action Allow -LocalPort 2222 Automatically Start SSHD ServiceCreate a CMD script to initiate the SSHD service in WSL2. @echo off setlocal C:\\Windows\\System32\\bash.exe -c \"sudo /usr/sbin/service ssh start\" C:\\Windows\\System32\\netsh.exe interface portproxy delete v4tov4 listenport=2022 listenaddress=0.0.0.0 protocol=tcp for /f %%i in ('wsl hostname -I') do set IP=%%i C:\\Windows\\System32\\netsh.exe interface portproxy add v4tov4 listenport=2022 listenaddress=0.0.0.0 connectport=2022 connectaddress=%IP% endlocal ","date":"2023-08-09","objectID":"/ssh-basics/:3:2","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#unblock-port-2222"},{"categories":["tricks"],"content":" On the Remote Host (Windows) Unblock Port 2222 New-NetFirewallRule -Name sshd -DisplayName 'OpenSSH Server (sshd) for WSL' -Enabled True -Direction Inbound -Protocol TCP -Action Allow -LocalPort 2222 Automatically Start SSHD ServiceCreate a CMD script to initiate the SSHD service in WSL2. @echo off setlocal C:\\Windows\\System32\\bash.exe -c \"sudo /usr/sbin/service ssh start\" C:\\Windows\\System32\\netsh.exe interface portproxy delete v4tov4 listenport=2022 listenaddress=0.0.0.0 protocol=tcp for /f %%i in ('wsl hostname -I') do set IP=%%i C:\\Windows\\System32\\netsh.exe interface portproxy add v4tov4 listenport=2022 listenaddress=0.0.0.0 connectport=2022 connectaddress=%IP% endlocal ","date":"2023-08-09","objectID":"/ssh-basics/:3:2","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#automatically-start-sshd-service"},{"categories":["tricks"],"content":" Connecting to WSL2 ssh -p 2222 \u003cusername\u003e@\u003chostname\u003e Note that the username here is distinct from the Windows host username; it pertains to the Linux system. Determine it using: whoami The hostname, however, remains consistent with the Windows host. VS Code Remote - SSHEdit the ~/.ssh/config on the local client: Host \u003chostname\u003e HostName \u003cnickname_windows\u003e User \u003cusername_windows\u003e Port 22 Host \u003chostname\u003e HostName \u003cnickname_wsl\u003e User \u003cusername_wsl\u003e Port 2222 ","date":"2023-08-09","objectID":"/ssh-basics/:3:3","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#connecting-to-wsl2"},{"categories":["tricks"],"content":" Connecting to WSL2 ssh -p 2222 @ Note that the username here is distinct from the Windows host username; it pertains to the Linux system. Determine it using: whoami The hostname, however, remains consistent with the Windows host. VS Code Remote - SSHEdit the ~/.ssh/config on the local client: Host HostName User Port 22 Host HostName User Port 2222 ","date":"2023-08-09","objectID":"/ssh-basics/:3:3","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#vs-code-remote---ssh"},{"categories":["tricks"],"content":" Running Jupyter Lab on a Remote HostUse ssh to run jupyter lab on a remote host and access it from a local browser. ","date":"2023-08-09","objectID":"/ssh-basics/:4:0","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#running-jupyter-lab-on-a-remote-host"},{"categories":["tricks"],"content":" Redirect Traffic from Remote Port to Local PortIf you designate \u003cremote_port\u003e for the remote and \u003clocal_port\u003e for the local, redirect the traffic as: ssh -L \u003clocal_port\u003e:localhost:\u003cremote_port\u003e \u003cusername\u003e@\u003chostname\u003e ","date":"2023-08-09","objectID":"/ssh-basics/:4:1","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#redirect-traffic-from-remote-port-to-local-port"},{"categories":["tricks"],"content":" Running Jupyter Lab on the Remote Host jupyter lab --no-browser --port=\u003cremote_port\u003e ","date":"2023-08-09","objectID":"/ssh-basics/:4:2","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#running-jupyter-lab-on-the-remote-host"},{"categories":["tricks"],"content":" Using croc to Transfer FilesFor more details, consult this link. ","date":"2023-08-09","objectID":"/ssh-basics/:5:0","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#using-croc-to-transfer-files"},{"categories":["tricks"],"content":" On the Local MachineNavigate to the directory you wish to sync: croc send --code \u003ccode\u003e . ","date":"2023-08-09","objectID":"/ssh-basics/:5:1","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#on-the-local-machine"},{"categories":["tricks"],"content":" On the Remote MachineTo receive the files: croc --yes --overwrite \u003ccode\u003e ","date":"2023-08-09","objectID":"/ssh-basics/:5:2","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#on-the-remote-machine"},{"categories":["tricks"],"content":" Avoiding SSH passphrase promptTo avoid the SSH passphrase prompt, you can use ssh-add to add the key to the ssh-agent cache. ","date":"2023-08-09","objectID":"/ssh-basics/:6:0","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#avoiding-ssh-passphrase-prompt"},{"categories":["tricks"],"content":"Windows Package Manager (winget) is a package manager for Windows. It is similar to apt in Linux. It is a command-line tool that allows you to search for and install apps from the command line. It is a great tool for setting up a new Windows machine. ","date":"2023-08-09","objectID":"/winget-basics/:0:0","series":[],"tags":["winget"],"title":"Winget Basics","uri":"/winget-basics/#"},{"categories":["tricks"],"content":" Search winget search \u003capp name\u003e ","date":"2023-08-09","objectID":"/winget-basics/:1:0","series":[],"tags":["winget"],"title":"Winget Basics","uri":"/winget-basics/#search"},{"categories":["tricks"],"content":" Install winget install \u003capp name\u003e The \u003capp name\u003e can be found by winget search. It does not have to be the full name, but it has to be unique. ","date":"2023-08-09","objectID":"/winget-basics/:2:0","series":[],"tags":["winget"],"title":"Winget Basics","uri":"/winget-basics/#install"},{"categories":["tricks"],"content":"I always forget the shortcuts for splitting windows, so I record them here. alt + shift + + 增加左右分割画面 alt + shift + - 增加上下分割画面 alt + ← 或 → 移动焦点画面 ctrl + shift + W 关闭这个小分割窗格 ","date":"2023-01-30","objectID":"/windows-terminal-splitting-shorcuts/:0:0","series":[],"tags":["windows terminal"],"title":"Windows Terminal splitting shortcuts","uri":"/windows-terminal-splitting-shorcuts/#"},{"categories":null,"content":" 关于 ","date":"2021-08-16","objectID":"/about/:0:0","series":null,"tags":null,"title":"关于 FakePhysicist","uri":"/about/#关于"},{"categories":null,"content":" 关于作者 🤪 强迫症与拖延症患者 🤔 热衷于了解世界的运转机制 ❤️ 爱好 ","date":"2021-08-16","objectID":"/about/:1:0","series":null,"tags":null,"title":"关于 FakePhysicist","uri":"/about/#关于作者"},{"categories":null,"content":" Haha 穷且益坚，不坠青云之志 滕王阁序 时运不齐，命途多舛。冯唐易老，李广难封。屈贾谊于长沙，非无圣主；窜梁鸿于海曲，岂乏明时？所赖君子见机，达人知命。老当益壮，宁移白首之心？穷且益坚，不坠青云之志酌贪泉而觉爽，处涸辙以犹欢。北海虽赊，扶摇可接；东隅已逝，桑榆非晚。孟尝高洁，空余报国之情；阮籍猖狂，岂效穷途之哭！ 勃，三尺微命，一介书生。无路请缨，等终军之弱冠；有怀投笔，慕宗悫之长风。舍簪笏于百龄，奉晨昏于万里。非谢家之宝树，接孟氏之芳邻。他日趋庭，叨陪鲤对；今兹捧袂，喜托龙门。杨意不逢，抚凌云而自惜；钟期既遇，奏流水以何惭？ ","date":"2021-08-16","objectID":"/about/:2:0","series":null,"tags":null,"title":"关于 FakePhysicist","uri":"/about/#haha"},{"categories":null,"content":" My Github chart ","date":"2021-08-16","objectID":"/about/:3:0","series":null,"tags":null,"title":"关于 FakePhysicist","uri":"/about/#my-github-chart"},{"categories":["tossing"],"content":"在 wsl 环境下安装 Hugo 并且配置主题 DoIt. ","date":"2021-01-01","objectID":"/build-a-personal-website-with-hugo/:0:0","series":[],"tags":["hugo","doit"],"title":"Hugo + DoIt 创建个人主页","uri":"/build-a-personal-website-with-hugo/#"},{"categories":["tossing"],"content":" Hugo","date":"2021-01-01","objectID":"/build-a-personal-website-with-hugo/:1:0","series":[],"tags":["hugo","doit"],"title":"Hugo + DoIt 创建个人主页","uri":"/build-a-personal-website-with-hugo/#hugo"},{"categories":["tossing"],"content":" 安装Install Hugo ","date":"2021-01-01","objectID":"/build-a-personal-website-with-hugo/:1:1","series":[],"tags":["hugo","doit"],"title":"Hugo + DoIt 创建个人主页","uri":"/build-a-personal-website-with-hugo/#Hugo-installation"},{"categories":["tossing"],"content":" 常用命令 hugo 编译项目生成静态网站，默认位置在项目的 public 目录下 hugo server --disableFastRender -D 预览网站内容 hugo new {folder}/{name}.md 创建新文章，使用 markdown 进行排版，一般默认放在 posts 文件夹下； 基本没了，一般情况下用这三个命令就够了. 但是要注意, 需要在项目的根目录下执行这些命令. ","date":"2021-01-01","objectID":"/build-a-personal-website-with-hugo/:1:2","series":[],"tags":["hugo","doit"],"title":"Hugo + DoIt 创建个人主页","uri":"/build-a-personal-website-with-hugo/#常用命令"},{"categories":["tossing"],"content":" DoIt","date":"2021-01-01","objectID":"/build-a-personal-website-with-hugo/:2:0","series":[],"tags":["hugo","doit"],"title":"Hugo + DoIt 创建个人主页","uri":"/build-a-personal-website-with-hugo/#doit"},{"categories":["tossing"],"content":" 安装项目主页 DoIt 文档说明 DoIt Documentation 创建你的项目, Hugo 提供了一个 new 命令来创建一个新的网站: hugo new site my_website cd my_website 初始化你的项目目录为 git 仓库, 并且把主题仓库作为你的网站目录的子模块: git init git submodule add https://github.com/HEIGE-PCloud/DoIt.git themes/DoIt 初始化项目：git submodule update --init --recursive，完成安装 自动更新 submodule：git submodule update --remote --merge; ","date":"2021-01-01","objectID":"/build-a-personal-website-with-hugo/:2:1","series":[],"tags":["hugo","doit"],"title":"Hugo + DoIt 创建个人主页","uri":"/build-a-personal-website-with-hugo/#DoIt-installation"},{"categories":["tossing"],"content":" 项目文件树结构 . ├── archetypes # markdown文章的模版 ├── config.toml # 配置文件 ├── content # 网站内容，主要保存文章 ├── data # 生成网站可用的数据文件，可用在模版中 ├── layouts # 生成网站时可用的模版 ├── public # 通过hugo命令生成的静态文件，主要发布这个 ├── resources # 通过hugo命令一起生成的资源文件，暂时不知道什么用 ├── static # 静态文件，比如文章中的图片/视频文件、缩略图等 └── themes # 保存可用的hugo主题 通常，我们只会用到以下几个文件夹的东西 config.toml ：保存 hugo 的配置，包括主题的配置等.详细设置见这里. content ：保存网站的各种内容，比如文章. archetypes ： 保存文章的 markdown 模版，通常包括文章的前缀注释，是一些在创建新文章时会被用到. static ：保存文章中用到的静态文件，比如图片、网站缩略图等. public ：通过 hugo 命令生成的静态 HTML, CSS, JS 等.在服务器上发布时主要发布这个文件夹. ","date":"2021-01-01","objectID":"/build-a-personal-website-with-hugo/:2:2","series":[],"tags":["hugo","doit"],"title":"Hugo + DoIt 创建个人主页","uri":"/build-a-personal-website-with-hugo/#项目文件树结构"},{"categories":["tossing"],"content":" 开始写第一篇文章","date":"2021-01-01","objectID":"/build-a-personal-website-with-hugo/:3:0","series":[],"tags":["hugo","doit"],"title":"Hugo + DoIt 创建个人主页","uri":"/build-a-personal-website-with-hugo/#开始写第一篇文章"},{"categories":["tossing"],"content":" 生成新文章生成新文章hello-world的命令： hugo new posts/hello-world/index.md 执行完成后，在./content/posts目录下应该可以看到新文件，同时里面已经有 markdown 模版中的文章前缀参数. 也可以手动复制旧文章来生成新文章，不通过命令. 也可以在content文件夹下建新的文件夹，方便管理.这种情况下生成的静态 HTML 文件路由效果如下： . └── content └── about | └── index.md // \u003c- https://example.com/about/ ├── posts | ├── firstpost.md // \u003c- https://example.com/posts/firstpost/ | ├── happy | | └── ness.md // \u003c- https://example.com/posts/happy/ness/ | └── secondpost.md // \u003c- https://example.com/posts/secondpost/ └── quote ├── first.md // \u003c- https://example.com/quote/first/ └── second.md // \u003c- https://example.com/quote/second/ ","date":"2021-01-01","objectID":"/build-a-personal-website-with-hugo/:3:1","series":[],"tags":["hugo","doit"],"title":"Hugo + DoIt 创建个人主页","uri":"/build-a-personal-website-with-hugo/#生成新文章"},{"categories":["tossing"],"content":" 本地调试 hugo server --disableFastRender ","date":"2021-01-01","objectID":"/build-a-personal-website-with-hugo/:3:2","series":[],"tags":["hugo","doit"],"title":"Hugo + DoIt 创建个人主页","uri":"/build-a-personal-website-with-hugo/#本地调试"},{"categories":["tossing"],"content":" GitHub Repository两个 Repositories Repository 1: 一个用于托管博客项目源文件, 设置权限为 Private Repository 2: 一个用于托管博客编译后生成的静态文件, 设置权限为 Public ","date":"2021-01-01","objectID":"/build-a-personal-website-with-hugo/:4:0","series":[],"tags":["hugo","doit"],"title":"Hugo + DoIt 创建个人主页","uri":"/build-a-personal-website-with-hugo/#github-repository"},{"categories":["tossing"],"content":" Repository 1设置为 private 权限等级，用于托管博客项目源文件. 别人看不到你的源代码. 链接本地仓库与远端仓库 ## 位于博客源代码根目录 ## 初始化本地Git仓库 git init ## 添加名为 Origin 的远端Git仓库 git remote add origin {{这里替换成你的仓库在Github `git clone`用的地址}} ## 选择所有文件 git add -A ## Push到github git push -u origin master 或者直接用 VSCode 链接本地仓库与远端 GitHub 仓库. 创建.gitignore在源代码项目中创建 .gitignore 文件，来防止把生成的静态文件上传 参考 gitignore.io # Created by https://www.toptal.com/developers/gitignore/api/hugo # Edit at https://www.toptal.com/developers/gitignore?templates=hugo ### Hugo ### # Generated files by hugo /public/ /resources/_gen/ # Executable may be added to repository hugo.exe hugo.darwin hugo.linux # End of https://www.toptal.com/developers/gitignore/api/hugo ","date":"2021-01-01","objectID":"/build-a-personal-website-with-hugo/:4:1","series":[],"tags":["hugo","doit"],"title":"Hugo + DoIt 创建个人主页","uri":"/build-a-personal-website-with-hugo/#repository-1"},{"categories":["tossing"],"content":" Repository 1设置为 private 权限等级，用于托管博客项目源文件. 别人看不到你的源代码. 链接本地仓库与远端仓库 ## 位于博客源代码根目录 ## 初始化本地Git仓库 git init ## 添加名为 Origin 的远端Git仓库 git remote add origin {{这里替换成你的仓库在Github `git clone`用的地址}} ## 选择所有文件 git add -A ## Push到github git push -u origin master 或者直接用 VSCode 链接本地仓库与远端 GitHub 仓库. 创建.gitignore在源代码项目中创建 .gitignore 文件，来防止把生成的静态文件上传 参考 gitignore.io # Created by https://www.toptal.com/developers/gitignore/api/hugo # Edit at https://www.toptal.com/developers/gitignore?templates=hugo ### Hugo ### # Generated files by hugo /public/ /resources/_gen/ # Executable may be added to repository hugo.exe hugo.darwin hugo.linux # End of https://www.toptal.com/developers/gitignore/api/hugo ","date":"2021-01-01","objectID":"/build-a-personal-website-with-hugo/:4:1","series":[],"tags":["hugo","doit"],"title":"Hugo + DoIt 创建个人主页","uri":"/build-a-personal-website-with-hugo/#链接本地仓库与远端仓库"},{"categories":["tossing"],"content":" Repository 1设置为 private 权限等级，用于托管博客项目源文件. 别人看不到你的源代码. 链接本地仓库与远端仓库 ## 位于博客源代码根目录 ## 初始化本地Git仓库 git init ## 添加名为 Origin 的远端Git仓库 git remote add origin {{这里替换成你的仓库在Github `git clone`用的地址}} ## 选择所有文件 git add -A ## Push到github git push -u origin master 或者直接用 VSCode 链接本地仓库与远端 GitHub 仓库. 创建.gitignore在源代码项目中创建 .gitignore 文件，来防止把生成的静态文件上传 参考 gitignore.io # Created by https://www.toptal.com/developers/gitignore/api/hugo # Edit at https://www.toptal.com/developers/gitignore?templates=hugo ### Hugo ### # Generated files by hugo /public/ /resources/_gen/ # Executable may be added to repository hugo.exe hugo.darwin hugo.linux # End of https://www.toptal.com/developers/gitignore/api/hugo ","date":"2021-01-01","objectID":"/build-a-personal-website-with-hugo/:4:1","series":[],"tags":["hugo","doit"],"title":"Hugo + DoIt 创建个人主页","uri":"/build-a-personal-website-with-hugo/#创建gitignore"},{"categories":["tossing"],"content":" Repository 2 创建仓库，注意名称第二个仓库名字比较重要，必须是 {{你的github用户名}}.github.io. 比如我的 GitHub 名字为 FakePhysicist, 那么我需要创建的仓库名称为 fakephysicist.github.io. 同时注意要设置为 Public 权限等级. 在仓库设置里设置启用 GitHub Pages设置 Branch 为 main, 静态文件位置为/(root), 原因是我们在下个步骤中会直接将生成的 public 文件夹中的内容 push 到 main 分支的 / 目录下. ","date":"2021-01-01","objectID":"/build-a-personal-website-with-hugo/:4:2","series":[],"tags":["hugo","doit"],"title":"Hugo + DoIt 创建个人主页","uri":"/build-a-personal-website-with-hugo/#repository-2"},{"categories":["tossing"],"content":" Repository 2 创建仓库，注意名称第二个仓库名字比较重要，必须是 {{你的github用户名}}.github.io. 比如我的 GitHub 名字为 FakePhysicist, 那么我需要创建的仓库名称为 fakephysicist.github.io. 同时注意要设置为 Public 权限等级. 在仓库设置里设置启用 GitHub Pages设置 Branch 为 main, 静态文件位置为/(root), 原因是我们在下个步骤中会直接将生成的 public 文件夹中的内容 push 到 main 分支的 / 目录下. ","date":"2021-01-01","objectID":"/build-a-personal-website-with-hugo/:4:2","series":[],"tags":["hugo","doit"],"title":"Hugo + DoIt 创建个人主页","uri":"/build-a-personal-website-with-hugo/#创建仓库注意名称"},{"categories":["tossing"],"content":" Repository 2 创建仓库，注意名称第二个仓库名字比较重要，必须是 {{你的github用户名}}.github.io. 比如我的 GitHub 名字为 FakePhysicist, 那么我需要创建的仓库名称为 fakephysicist.github.io. 同时注意要设置为 Public 权限等级. 在仓库设置里设置启用 GitHub Pages设置 Branch 为 main, 静态文件位置为/(root), 原因是我们在下个步骤中会直接将生成的 public 文件夹中的内容 push 到 main 分支的 / 目录下. ","date":"2021-01-01","objectID":"/build-a-personal-website-with-hugo/:4:2","series":[],"tags":["hugo","doit"],"title":"Hugo + DoIt 创建个人主页","uri":"/build-a-personal-website-with-hugo/#在仓库设置里设置启用-github-pages"},{"categories":["tossing"],"content":" 手工发布(更好, 不会有网页渲染问题. GitHub Actions 会有网页渲染问题) 将hugo命令生成的public文件夹上传到 GitHub pages 项目下。 在 my_website 目录下执行 git submodule update --init --recursive 将子模块更新到最新状态. 在 config.toml 中, 设置 baseurl = https://\u003cUSERNAME\u003e.github.io/. 确保 public 文件夹被删除. 将 \u003cUSERNAME\u003e.github.io repository 设置为一个 submodule, 并设置其在文件夹 public 中. git submodule add -f -b main https://github.com/FakePhysicist/fakephysicist.github.io.git public 生成网页, 并将其推送到 repository 2. hugo cd public git add . git commit -m \"Build website\" git push origin main cd .. Add, commit and push repository 1. git add . git commit -m \"Initial commit\" git push -u origin master This can be done automatically by creating a bash script: #!/bin/bash # Ensure we exit on any error set -e # Function to check current directory is the root of the repository check_root_dir() { if [ ! -d \".git\" ]; then echo \"Error: The script needs to be run from the root of the repository.\" exit 1 fi } # Step 1: Update submodules check_root_dir git submodule update --init --recursive # Step 2: Ensure public folder is deleted if [ -d \"public\" ]; then rm -rf public fi # git submodule add -f -b main https://github.com/FakePhysicist/fakephysicist.github.io.git public # Step 3: Generate the website and push it to the submodule repository hugo cd public git add . git commit -m \"Build website\" git push origin main cd .. rm -rf public # Step 4: Add, commit and push the main repository git add . git commit -m \"Update website content\" git push -u origin master echo \"Deployment completed successfully!\" ","date":"2021-01-01","objectID":"/build-a-personal-website-with-hugo/:5:0","series":[],"tags":["hugo","doit"],"title":"Hugo + DoIt 创建个人主页","uri":"/build-a-personal-website-with-hugo/#手工发布"},{"categories":["tossing"],"content":" Tips","date":"2021-01-01","objectID":"/build-a-personal-website-with-hugo/:6:0","series":[],"tags":["hugo","doit"],"title":"Hugo + DoIt 创建个人主页","uri":"/build-a-personal-website-with-hugo/#tips"},{"categories":["tossing"],"content":" 使用 Math shortcode可以顺利使用 KaTeX 的 Math shortcode. 参考 这样可以省去使用转义字符\\的麻烦. 不用出现\\\\\\\\, \\_, \\* 这样奇奇怪怪的东西. 参考. 使用方法: \\begin{aligned} \\frac{1}{2} \u0026= \\frac{1}{2} \\\\ \\end{aligned} ","date":"2021-01-01","objectID":"/build-a-personal-website-with-hugo/:6:1","series":[],"tags":["hugo","doit"],"title":"Hugo + DoIt 创建个人主页","uri":"/build-a-personal-website-with-hugo/#使用-math-shortcode"},{"categories":["tossing"],"content":" 评论系统 giscus在 config.toml 中启用评论系统 具体配置参考 giscus. ","date":"2021-01-01","objectID":"/build-a-personal-website-with-hugo/:6:2","series":[],"tags":["hugo","doit"],"title":"Hugo + DoIt 创建个人主页","uri":"/build-a-personal-website-with-hugo/#评论系统-giscus"},{"categories":["tossing"],"content":" 中文排版指南中文文案排版指北 主要就是说: 中英文之间要有空格 中文与数字之间要有空格 ","date":"2021-01-01","objectID":"/build-a-personal-website-with-hugo/:6:3","series":[],"tags":["hugo","doit"],"title":"Hugo + DoIt 创建个人主页","uri":"/build-a-personal-website-with-hugo/#中文排版指南"},{"categories":["tossing"],"content":" Update lastmod automatically在 config.toml 中设置 enableGitInfo = true，这样每次 git push 时，lastmod 就会自动更新. ","date":"2021-01-01","objectID":"/build-a-personal-website-with-hugo/:6:4","series":[],"tags":["hugo","doit"],"title":"Hugo + DoIt 创建个人主页","uri":"/build-a-personal-website-with-hugo/#update-lastmod-automatically"},{"categories":null,"content":" Stay","date":"0001-01-01","objectID":"/love/:0:0","series":null,"tags":null,"title":"","uri":"/love/#stay"},{"categories":null,"content":" Since 2019/8/14","date":"0001-01-01","objectID":"/since/:0:0","series":null,"tags":null,"title":"","uri":"/since/#since-2019814"},{"categories":null,"content":" 我已经在美国待了 ","date":"0001-01-01","objectID":"/since/:1:0","series":null,"tags":null,"title":"","uri":"/since/#我已经在美国待了"},{"categories":null,"content":" 你没有连接至互联网, 只有缓存的页面可用. ","date":"0001-01-01","objectID":"/offline/:0:0","series":null,"tags":null,"title":"Offline","uri":"/offline/#"}]