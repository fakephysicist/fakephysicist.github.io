[{"categories":["tricks"],"content":"In this post, I will show you how to compile Mitsuba from source code. Follow the instructions in the documentation to compile the project. ","date":"2024-08-04","objectID":"/compile-mitsuba/:0:0","series":[],"tags":["mitsuba"],"title":"Compile Mitsuba","uri":"/compile-mitsuba/#"},{"categories":["tricks"],"content":" Compile Mitsuba","date":"2024-08-04","objectID":"/compile-mitsuba/:1:0","series":[],"tags":["mitsuba"],"title":"Compile Mitsuba","uri":"/compile-mitsuba/#compile-mitsuba"},{"categories":["tricks"],"content":" Clone the Repository git clone --recursive https://github.com/mitsuba-renderer/mitsuba3 ","date":"2024-08-04","objectID":"/compile-mitsuba/:1:1","series":[],"tags":["mitsuba"],"title":"Compile Mitsuba","uri":"/compile-mitsuba/#clone-the-repository"},{"categories":["tricks"],"content":" Switch to the Most Recent VersionSwitch to the most recent version of the repository. For example, if the current version is v3.5.2, switch to tag v3.5.3: git checkout v3.5.3 ","date":"2024-08-04","objectID":"/compile-mitsuba/:1:2","series":[],"tags":["mitsuba"],"title":"Compile Mitsuba","uri":"/compile-mitsuba/#switch-to-the-most-recent-version"},{"categories":["tricks"],"content":" Recursively Update the Submodules git submodule update --init --recursive ","date":"2024-08-04","objectID":"/compile-mitsuba/:1:3","series":[],"tags":["mitsuba"],"title":"Compile Mitsuba","uri":"/compile-mitsuba/#recursively-update-the-submodules"},{"categories":["tricks"],"content":" Compile the Project mkdir build cd build cmake -GNinja .. This should generate a build directory with a mitsuba.conf file. You should set the variants you want to compile in this file. For example, to compile the scalar_rgb, scalar_spectral, scalar_spectral_polarized, llvm_spectral, llvm_spectral_polarized, and llvm_ad_rgb variants, the mitsuba.conf file should look like this: \"enabled\": [ \"scalar_rgb\", \"scalar_spectral\", \"scalar_spectral_polarized\", \"llvm_spectral\", \"llvm_spectral_polarized\", \"llvm_ad_rgb\" ], Then, compile the project: ninja ","date":"2024-08-04","objectID":"/compile-mitsuba/:1:4","series":[],"tags":["mitsuba"],"title":"Compile Mitsuba","uri":"/compile-mitsuba/#compile-the-project"},{"categories":["tricks"],"content":" Using Mitsuba in PythonTo call the compiled version of Mitsuba in python or Jupyter, add the path of the compiled python module to the python path. For example, if the path to the compiled python module is /Users/your_username/mitsuba3/build/python, you can add this path to the python path by running the following code: import sys sys.path.insert(0, '/Users/your_username/mitsuba3/build/python') This can work only temporarily. If you quit the python session, or restart the Jupyter kernel, you will have to run this code again. ","date":"2024-08-04","objectID":"/compile-mitsuba/:2:0","series":[],"tags":["mitsuba"],"title":"Compile Mitsuba","uri":"/compile-mitsuba/#using-mitsuba-in-python"},{"categories":["tricks"],"content":" Import MitsubaThen, you can then import Mitsuba as usual: import drjit as dr import mitsuba as mi ","date":"2024-08-04","objectID":"/compile-mitsuba/:2:1","series":[],"tags":["mitsuba"],"title":"Compile Mitsuba","uri":"/compile-mitsuba/#import-mitsuba"},{"categories":["tricks"],"content":" Check the Version of MitsubaTo check if the correct version of Mitsuba is being used, you can run the following code: mi.variants() mi.set_variant('llvm_spectral_polarized') print(mi.MI_VERSION) This code will print the available variants and the version of Mitsuba being used. Also, it tests if the variant llvm_spectral_polarized is available. ","date":"2024-08-04","objectID":"/compile-mitsuba/:2:2","series":[],"tags":["mitsuba"],"title":"Compile Mitsuba","uri":"/compile-mitsuba/#check-the-version-of-mitsuba"},{"categories":["tricks"],"content":"Some basics about setting up a development environment on MacOS. ","date":"2023-10-04","objectID":"/macos-setup/:0:0","series":[],"tags":["mac"],"title":"MacOS Setup","uri":"/macos-setup/#"},{"categories":["tricks"],"content":" XcodeIn the terminal, run sudo xcode-select --install ","date":"2023-10-04","objectID":"/macos-setup/:1:0","series":[],"tags":["mac"],"title":"MacOS Setup","uri":"/macos-setup/#xcode"},{"categories":["tricks"],"content":" Homebrew /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\" ","date":"2023-10-04","objectID":"/macos-setup/:2:0","series":[],"tags":["mac"],"title":"MacOS Setup","uri":"/macos-setup/#homebrew"},{"categories":["tricks"],"content":" Oh My ZshInstall Zsh first: brew install zsh Then install Oh My Zsh: sh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\" ","date":"2023-10-04","objectID":"/macos-setup/:3:0","series":[],"tags":["mac"],"title":"MacOS Setup","uri":"/macos-setup/#oh-my-zsh"},{"categories":["tricks"],"content":" PluginsEdit ~/.zshrc: plugins=( sudo extract autojump zsh-autosuggestions zsh-syntax-highlighting ) sudoPress ESC twice to add sudo to the beginning of the command. extractUse x abc.zip to extract abc.zip. It supports almost all compressed formats. autojump brew install autojump Follow the instructions to add the following line to ~/.zshrc: # \u003e\u003e\u003e autojump initialize \u003e\u003e\u003e [ -f /opt/homebrew/etc/profile.d/autojump.sh ] \u0026\u0026 . /opt/homebrew/etc/profile.d/autojump.sh # \u003c\u003c\u003c autojump initialize \u003c\u003c\u003c Use j to jump to the matching directory. j \u003ckeyword\u003e zsh-autosuggestionsauto-suggestion for zsh. It suggests commands based on your command history. git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions zsh-syntax-highlightingSyntax highlighting for zsh. It should be the last plugin in the plugins list. git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting ","date":"2023-10-04","objectID":"/macos-setup/:3:1","series":[],"tags":["mac"],"title":"MacOS Setup","uri":"/macos-setup/#plugins"},{"categories":["tricks"],"content":" PluginsEdit ~/.zshrc: plugins=( sudo extract autojump zsh-autosuggestions zsh-syntax-highlighting ) sudoPress ESC twice to add sudo to the beginning of the command. extractUse x abc.zip to extract abc.zip. It supports almost all compressed formats. autojump brew install autojump Follow the instructions to add the following line to ~/.zshrc: # \u003e\u003e\u003e autojump initialize \u003e\u003e\u003e [ -f /opt/homebrew/etc/profile.d/autojump.sh ] \u0026\u0026 . /opt/homebrew/etc/profile.d/autojump.sh # \u003c\u003c\u003c autojump initialize \u003c\u003c\u003c Use j to jump to the matching directory. j zsh-autosuggestionsauto-suggestion for zsh. It suggests commands based on your command history. git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions zsh-syntax-highlightingSyntax highlighting for zsh. It should be the last plugin in the plugins list. git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting ","date":"2023-10-04","objectID":"/macos-setup/:3:1","series":[],"tags":["mac"],"title":"MacOS Setup","uri":"/macos-setup/#sudo"},{"categories":["tricks"],"content":" PluginsEdit ~/.zshrc: plugins=( sudo extract autojump zsh-autosuggestions zsh-syntax-highlighting ) sudoPress ESC twice to add sudo to the beginning of the command. extractUse x abc.zip to extract abc.zip. It supports almost all compressed formats. autojump brew install autojump Follow the instructions to add the following line to ~/.zshrc: # \u003e\u003e\u003e autojump initialize \u003e\u003e\u003e [ -f /opt/homebrew/etc/profile.d/autojump.sh ] \u0026\u0026 . /opt/homebrew/etc/profile.d/autojump.sh # \u003c\u003c\u003c autojump initialize \u003c\u003c\u003c Use j to jump to the matching directory. j zsh-autosuggestionsauto-suggestion for zsh. It suggests commands based on your command history. git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions zsh-syntax-highlightingSyntax highlighting for zsh. It should be the last plugin in the plugins list. git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting ","date":"2023-10-04","objectID":"/macos-setup/:3:1","series":[],"tags":["mac"],"title":"MacOS Setup","uri":"/macos-setup/#extract"},{"categories":["tricks"],"content":" PluginsEdit ~/.zshrc: plugins=( sudo extract autojump zsh-autosuggestions zsh-syntax-highlighting ) sudoPress ESC twice to add sudo to the beginning of the command. extractUse x abc.zip to extract abc.zip. It supports almost all compressed formats. autojump brew install autojump Follow the instructions to add the following line to ~/.zshrc: # \u003e\u003e\u003e autojump initialize \u003e\u003e\u003e [ -f /opt/homebrew/etc/profile.d/autojump.sh ] \u0026\u0026 . /opt/homebrew/etc/profile.d/autojump.sh # \u003c\u003c\u003c autojump initialize \u003c\u003c\u003c Use j to jump to the matching directory. j zsh-autosuggestionsauto-suggestion for zsh. It suggests commands based on your command history. git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions zsh-syntax-highlightingSyntax highlighting for zsh. It should be the last plugin in the plugins list. git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting ","date":"2023-10-04","objectID":"/macos-setup/:3:1","series":[],"tags":["mac"],"title":"MacOS Setup","uri":"/macos-setup/#autojump"},{"categories":["tricks"],"content":" PluginsEdit ~/.zshrc: plugins=( sudo extract autojump zsh-autosuggestions zsh-syntax-highlighting ) sudoPress ESC twice to add sudo to the beginning of the command. extractUse x abc.zip to extract abc.zip. It supports almost all compressed formats. autojump brew install autojump Follow the instructions to add the following line to ~/.zshrc: # \u003e\u003e\u003e autojump initialize \u003e\u003e\u003e [ -f /opt/homebrew/etc/profile.d/autojump.sh ] \u0026\u0026 . /opt/homebrew/etc/profile.d/autojump.sh # \u003c\u003c\u003c autojump initialize \u003c\u003c\u003c Use j to jump to the matching directory. j zsh-autosuggestionsauto-suggestion for zsh. It suggests commands based on your command history. git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions zsh-syntax-highlightingSyntax highlighting for zsh. It should be the last plugin in the plugins list. git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting ","date":"2023-10-04","objectID":"/macos-setup/:3:1","series":[],"tags":["mac"],"title":"MacOS Setup","uri":"/macos-setup/#zsh-autosuggestions"},{"categories":["tricks"],"content":" PluginsEdit ~/.zshrc: plugins=( sudo extract autojump zsh-autosuggestions zsh-syntax-highlighting ) sudoPress ESC twice to add sudo to the beginning of the command. extractUse x abc.zip to extract abc.zip. It supports almost all compressed formats. autojump brew install autojump Follow the instructions to add the following line to ~/.zshrc: # \u003e\u003e\u003e autojump initialize \u003e\u003e\u003e [ -f /opt/homebrew/etc/profile.d/autojump.sh ] \u0026\u0026 . /opt/homebrew/etc/profile.d/autojump.sh # \u003c\u003c\u003c autojump initialize \u003c\u003c\u003c Use j to jump to the matching directory. j zsh-autosuggestionsauto-suggestion for zsh. It suggests commands based on your command history. git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions zsh-syntax-highlightingSyntax highlighting for zsh. It should be the last plugin in the plugins list. git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting ","date":"2023-10-04","objectID":"/macos-setup/:3:1","series":[],"tags":["mac"],"title":"MacOS Setup","uri":"/macos-setup/#zsh-syntax-highlighting"},{"categories":["tricks"],"content":" ThemeI prefer the powerlevel10k theme. One can find the installation instructions here. clone the repository git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k Set ZSH_THEME=\"powerlevel10k/powerlevel10k\" in ~/.zshrc. Run p10k configure to configure the theme. (It will be automatically run when you open a new terminal window. I prefer not to install the recommended fonts.) ","date":"2023-10-04","objectID":"/macos-setup/:3:2","series":[],"tags":["mac"],"title":"MacOS Setup","uri":"/macos-setup/#theme"},{"categories":["tricks"],"content":" High-efficiency software","date":"2023-10-04","objectID":"/macos-setup/:4:0","series":[],"tags":["mac"],"title":"MacOS Setup","uri":"/macos-setup/#high-efficiency-software"},{"categories":["tricks"],"content":" tldrtldr is a community effort to simplify the beloved man pages with practical examples. brew install tldr To use it, run tldr \u003ccommand\u003e ","date":"2023-10-04","objectID":"/macos-setup/:4:1","series":[],"tags":["mac"],"title":"MacOS Setup","uri":"/macos-setup/#tldr"},{"categories":["tricks"],"content":" treetree is a recursive directory listing command that produces a depth indented listing of files. brew install tree ","date":"2023-10-04","objectID":"/macos-setup/:4:2","series":[],"tags":["mac"],"title":"MacOS Setup","uri":"/macos-setup/#tree"},{"categories":["tricks"],"content":" .gitignoreSet the global .gitignore file: curl https://raw.githubusercontent.com/github/gitignore/master/Global/macOS.gitignore -o ~/.gitignore Config git to use the global .gitignore file: git config --global core.excludesfile ~/.gitignore visit gitignore to generate a .gitignore file for your project. ","date":"2023-10-04","objectID":"/macos-setup/:5:0","series":[],"tags":["mac"],"title":"MacOS Setup","uri":"/macos-setup/#gitignore"},{"categories":["tricks"],"content":" condaSee conda-basics for more details. ","date":"2023-10-04","objectID":"/macos-setup/:6:0","series":[],"tags":["mac"],"title":"MacOS Setup","uri":"/macos-setup/#conda"},{"categories":["tricks"],"content":"Some basics about Git and GitHub. Although there are many tutorials online, I still want to record some of them here for my own reference. ","date":"2023-09-10","objectID":"/git-basics/:0:0","series":[],"tags":["git","github","ssh"],"title":"Git Basics","uri":"/git-basics/#"},{"categories":["tricks"],"content":" Some References Git and GitHub (Concise) Git 与代码管理 (Good!) ","date":"2023-09-10","objectID":"/git-basics/:1:0","series":[],"tags":["git","github","ssh"],"title":"Git Basics","uri":"/git-basics/#some-references"},{"categories":["tricks"],"content":" Configure Git git config --global user.name \"Your Name Here\" git config --global user.email \"your_email@youremail.com\" NOTE: your_email@@youremail.com should be the noreply email address of your GitHub account. ","date":"2023-09-10","objectID":"/git-basics/:2:0","series":[],"tags":["git","github","ssh"],"title":"Git Basics","uri":"/git-basics/#configure-git"},{"categories":["tricks"],"content":" Git Clone git clone https://github.com/\u003cusername\u003e/\u003crepo-name\u003e.git # https git clone git@github.com:\u003cusername\u003e/\u003crepo-name\u003e.git # SSH ","date":"2023-09-10","objectID":"/git-basics/:3:0","series":[],"tags":["git","github","ssh"],"title":"Git Basics","uri":"/git-basics/#git-clone"},{"categories":["tricks"],"content":" Git Branch","date":"2023-09-10","objectID":"/git-basics/:4:0","series":[],"tags":["git","github","ssh"],"title":"Git Basics","uri":"/git-basics/#git-branch"},{"categories":["tricks"],"content":" View all branches git branch -a ","date":"2023-09-10","objectID":"/git-basics/:4:1","series":[],"tags":["git","github","ssh"],"title":"Git Basics","uri":"/git-basics/#view-all-branches"},{"categories":["tricks"],"content":" Create a new branch git branch \u003cbranch-name\u003e ","date":"2023-09-10","objectID":"/git-basics/:4:2","series":[],"tags":["git","github","ssh"],"title":"Git Basics","uri":"/git-basics/#create-a-new-branch"},{"categories":["tricks"],"content":" Switch to a branch git checkout \u003cbranch-name\u003e or git switch \u003cbranch-name\u003e ","date":"2023-09-10","objectID":"/git-basics/:4:3","series":[],"tags":["git","github","ssh"],"title":"Git Basics","uri":"/git-basics/#switch-to-a-branch"},{"categories":["tricks"],"content":" Create and switch to a new branch git checkout -b \u003cbranch-name\u003e or git switch -c \u003cbranch-name\u003e ","date":"2023-09-10","objectID":"/git-basics/:4:4","series":[],"tags":["git","github","ssh"],"title":"Git Basics","uri":"/git-basics/#create-and-switch-to-a-new-branch"},{"categories":["tricks"],"content":" Merge a branchFirst, switch to the branch you want to merge into, for example, main: git checkout main Then, merge the branch you want to merge into main, for example, dev: git merge dev ","date":"2023-09-10","objectID":"/git-basics/:4:5","series":[],"tags":["git","github","ssh"],"title":"Git Basics","uri":"/git-basics/#merge-a-branch"},{"categories":["tricks"],"content":" Delete a branch git branch -d \u003cbranch-name\u003e If the branch has not been merged, use -D instead of -d: git branch -D \u003cbranch-name\u003e ","date":"2023-09-10","objectID":"/git-basics/:4:6","series":[],"tags":["git","github","ssh"],"title":"Git Basics","uri":"/git-basics/#delete-a-branch"},{"categories":["tricks"],"content":" SSH Config for GitHubMake sure you have generated an SSH key pair on your local machine. ","date":"2023-09-10","objectID":"/git-basics/:5:0","series":[],"tags":["git","github","ssh"],"title":"Git Basics","uri":"/git-basics/#ssh-config-for-github"},{"categories":["tricks"],"content":" Add a new SSH public key to your GitHub accountSee GitHub documents ","date":"2023-09-10","objectID":"/git-basics/:5:1","series":[],"tags":["git","github","ssh"],"title":"Git Basics","uri":"/git-basics/#add-a-new-ssh-public-key-to-your-github-account"},{"categories":["tricks"],"content":" Test SSH connection ssh -T git@github.com ","date":"2023-09-10","objectID":"/git-basics/:5:2","series":[],"tags":["git","github","ssh"],"title":"Git Basics","uri":"/git-basics/#test-ssh-connection"},{"categories":["tricks"],"content":" Some Useful Commands","date":"2023-09-10","objectID":"/git-basics/:6:0","series":[],"tags":["git","github","ssh"],"title":"Git Basics","uri":"/git-basics/#some-useful-commands"},{"categories":["tricks"],"content":" Remove all .DS_Store files recursivelyDelete all .DS_Store files recursively and print the path of each deleted file: find . -name \".DS_Store\" -print -delete ","date":"2023-09-10","objectID":"/git-basics/:6:1","series":[],"tags":["git","github","ssh"],"title":"Git Basics","uri":"/git-basics/#remove-all-ds_store-files-recursively"},{"categories":["tricks"],"content":" Generate a timestampUse the following code snippet to generate the current timestamp in the format of YYYY-MM-DD HH:MM:SS-07:00: timestamp=$(date +\"%Y-%m-%dT%H:%M:%S\") offset=$(date +%z) formatted_offset=${offset:0:3}:${offset:3:2} echo \"${timestamp}${formatted_offset}\" ","date":"2023-09-10","objectID":"/git-basics/:6:2","series":[],"tags":["git","github","ssh"],"title":"Git Basics","uri":"/git-basics/#generate-a-timestamp"},{"categories":["tricks"],"content":"It is recommended to create a new environment for each project and leave the base environment untouched. In the following, we assume the environment name is cs101. ","date":"2023-08-09","objectID":"/conda-basics/:0:0","series":[],"tags":["conda","python"],"title":"Conda Basics","uri":"/conda-basics/#"},{"categories":["tricks"],"content":" Install miniforgeSee Miniforge for more information. For Linux and macOS: curl -L -O \"https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-$(uname)-$(uname -m).sh\" bash Miniforge3-$(uname)-$(uname -m).sh ","date":"2023-08-09","objectID":"/conda-basics/:1:0","series":[],"tags":["conda","python"],"title":"Conda Basics","uri":"/conda-basics/#install-miniforge"},{"categories":["tricks"],"content":" Prevent conda from activating the base environment automatically conda config --set auto_activate_base false ","date":"2023-08-09","objectID":"/conda-basics/:2:0","series":[],"tags":["conda","python"],"title":"Conda Basics","uri":"/conda-basics/#prevent-conda-from-activating-the-base-environment-automatically"},{"categories":["tricks"],"content":" Add Miniforge to VS CodeAdd the following lines to settings.json: \"python.condaPath\": \"~/miniforge/condabin/conda\", \"python.defaultInterpreterPath\": \"~/miniforge/envs/cs101/bin/python\", ","date":"2023-08-09","objectID":"/conda-basics/:3:0","series":[],"tags":["conda","python"],"title":"Conda Basics","uri":"/conda-basics/#add-miniforge-to-vs-code"},{"categories":["tricks"],"content":" Create a New Environment conda create -n cs101 ","date":"2023-08-09","objectID":"/conda-basics/:4:0","series":[],"tags":["conda","python"],"title":"Conda Basics","uri":"/conda-basics/#create-a-new-environment"},{"categories":["tricks"],"content":" Activate an Environment conda activate cs101 ","date":"2023-08-09","objectID":"/conda-basics/:5:0","series":[],"tags":["conda","python"],"title":"Conda Basics","uri":"/conda-basics/#activate-an-environment"},{"categories":["tricks"],"content":" Install common packages for scientific computing conda install -y numpy matplotlib scipy pandas sympy jupyterlab ipykernel ipywidgets pytest numba plotly ","date":"2023-08-09","objectID":"/conda-basics/:6:0","series":[],"tags":["conda","python"],"title":"Conda Basics","uri":"/conda-basics/#install-common-packages-for-scientific-computing"},{"categories":["tricks"],"content":" Use pip to install packages not available in Anaconda pip install rocket-fft ","date":"2023-08-09","objectID":"/conda-basics/:7:0","series":[],"tags":["conda","python"],"title":"Conda Basics","uri":"/conda-basics/#use-pip-to-install-packages-not-available-in-anaconda"},{"categories":["tricks"],"content":" Install local modules/packages pip install -e . In this way, the package will be installed in the current environment and the changes will be reflected immediately. ","date":"2023-08-09","objectID":"/conda-basics/:8:0","series":[],"tags":["conda","python"],"title":"Conda Basics","uri":"/conda-basics/#install-local-modulespackages"},{"categories":["tricks"],"content":" Deactivate an Environment conda deactivate ","date":"2023-08-09","objectID":"/conda-basics/:9:0","series":[],"tags":["conda","python"],"title":"Conda Basics","uri":"/conda-basics/#deactivate-an-environment"},{"categories":["tricks"],"content":" List All Environments conda env list ","date":"2023-08-09","objectID":"/conda-basics/:10:0","series":[],"tags":["conda","python"],"title":"Conda Basics","uri":"/conda-basics/#list-all-environments"},{"categories":["tricks"],"content":" Remove an Environment conda remove -n cs101 --all ","date":"2023-08-09","objectID":"/conda-basics/:11:0","series":[],"tags":["conda","python"],"title":"Conda Basics","uri":"/conda-basics/#remove-an-environment"},{"categories":["tricks"],"content":"SSH is a protocol that allows you to connect to a remote computer. It is widely used in remote computing, such as connecting to a remote server or running Jupyter Lab in a remote host. ","date":"2023-08-09","objectID":"/ssh-basics/:0:0","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#"},{"categories":["tricks"],"content":" Create an SSH key pair","date":"2023-08-09","objectID":"/ssh-basics/:1:0","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#create-an-ssh-key-pair"},{"categories":["tricks"],"content":" Check for existing SSH keysFirst check for existing SSH keys on your computer by running: ls -al ~/.ssh # Lists the files in your .ssh directory, if they exist Check the directory listing to see if you have files named either id_ed25519.pub or id_ed25519.pub. If you don’t have either of those files then read on, otherwise skip the next section. ","date":"2023-08-09","objectID":"/ssh-basics/:1:1","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#check-for-existing-ssh-keys"},{"categories":["tricks"],"content":" Generate a new SSH key Open Terminal. Paste the text below, substituting in your GitHub email address. This creates a new ssh key, using the provided email as a label. ssh-keygen -t ed25519 -C \"your_email@example.com\" ","date":"2023-08-09","objectID":"/ssh-basics/:1:2","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#generate-a-new-ssh-key"},{"categories":["tricks"],"content":" Add your SSH key to the ssh-agent Start the ssh-agent in the background. eval \"$(ssh-agent -s)\" Add your SSH private key to the ssh-agent. If you created your key with a different name, or if you are adding an existing key that has a different name, replace id_ed25519 in the command with the name of your private key file. ssh-add ~/.ssh/id_ed25519 ","date":"2023-08-09","objectID":"/ssh-basics/:1:3","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#add-your-ssh-key-to-the-ssh-agent"},{"categories":["tricks"],"content":" SSH Access to Windows","date":"2023-08-09","objectID":"/ssh-basics/:2:0","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#ssh-access-to-windows"},{"categories":["tricks"],"content":" Creating an SSH Key in Local SSH ClientFor a detailed explanation, refer to my previous post. In summary: Generate a key pair in the local SSH client. Activate the ssh-agent and link the private key to it. In Windows, this process can be executed in PowerShell: # Generate a key pair ssh-keygen -t ed25519 # By default, the ssh-agent service is disabled. Configure it to start automatically. Ensure you're running as an Administrator. Get-Service ssh-agent | Set-Service -StartupType Automatic # Activate the service Start-Service ssh-agent # This should return a status of Running Get-Service ssh-agent # Load your key files into ssh-agent ssh-add $env:USERPROFILE\\.ssh\\id_ed25519 ","date":"2023-08-09","objectID":"/ssh-basics/:2:1","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#creating-an-ssh-key-in-local-ssh-client"},{"categories":["tricks"],"content":" Starting SSHD on the Remote Host # Set the sshd service to start automatically Get-Service -Name sshd | Set-Service -StartupType Automatic # Activate the sshd service Start-Service sshd ","date":"2023-08-09","objectID":"/ssh-basics/:2:2","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#starting-sshd-on-the-remote-host"},{"categories":["tricks"],"content":" Deploying the Public Key to the Remote HostYour public key, \\.ssh\\id_ed25519.pub, should be placed on the server in a text file named administrators_authorized_keys located in C:\\ProgramData\\ssh\\. ","date":"2023-08-09","objectID":"/ssh-basics/:2:3","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#deploying-the-public-key-to-the-remote-host"},{"categories":["tricks"],"content":" Configuring the default shell for OpenSSH in WindowsFor example, to use PowerShell as the default shell: New-ItemProperty -Path \"HKLM:\\SOFTWARE\\OpenSSH\" -Name DefaultShell -Value \"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" -PropertyType String -Force ","date":"2023-08-09","objectID":"/ssh-basics/:2:4","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#configuring-the-default-shell-for-openssh-in-windows"},{"categories":["tricks"],"content":" Windows ConfigurationsIn Windows, sshd reads configuration data from `%programdata%\\ssh\\sshd_config`` by default. You can modify the configuration file to change the default port, for example: # Port 22 is the default port for SSH Port 22 You can also disable password authentication to prevent brute-force attacks: # Disable password authentication PasswordAuthentication no You can enable public key authentication: # Enable public key authentication PubkeyAuthentication yes ","date":"2023-08-09","objectID":"/ssh-basics/:2:5","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#windows-configurations"},{"categories":["tricks"],"content":" Connecting to Windows in terminal ssh \u003cusername\u003e@\u003chostname\u003e ","date":"2023-08-09","objectID":"/ssh-basics/:2:6","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#connecting-to-windows-in-terminal"},{"categories":["tricks"],"content":" Connecting to Windows in VS CodeTo connect, you need to know the username and hostname of the remote host. Determining the UsernameThe username typically matches the account name of the remote host, retrievable by: echo $env:USERNAME However, if you’re using a Microsoft account to log in, the username might be the associated email address. Determining the HostnameThe hostname, which is the IP address of the remote host, can be retrieved with: ipconfig If it doesn’t workTry enable Port 22 netsh advfirewall firewall add rule name=\"Open SSH Port 22\" dir=in action=allow protocol=TCP localport=22 remoteip=any Try enabling Remote server listen on socket in VS Code. ","date":"2023-08-09","objectID":"/ssh-basics/:2:7","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#connecting-to-windows-in-vs-code"},{"categories":["tricks"],"content":" Connecting to Windows in VS CodeTo connect, you need to know the username and hostname of the remote host. Determining the UsernameThe username typically matches the account name of the remote host, retrievable by: echo $env:USERNAME However, if you’re using a Microsoft account to log in, the username might be the associated email address. Determining the HostnameThe hostname, which is the IP address of the remote host, can be retrieved with: ipconfig If it doesn’t workTry enable Port 22 netsh advfirewall firewall add rule name=\"Open SSH Port 22\" dir=in action=allow protocol=TCP localport=22 remoteip=any Try enabling Remote server listen on socket in VS Code. ","date":"2023-08-09","objectID":"/ssh-basics/:2:7","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#determining-the-username"},{"categories":["tricks"],"content":" Connecting to Windows in VS CodeTo connect, you need to know the username and hostname of the remote host. Determining the UsernameThe username typically matches the account name of the remote host, retrievable by: echo $env:USERNAME However, if you’re using a Microsoft account to log in, the username might be the associated email address. Determining the HostnameThe hostname, which is the IP address of the remote host, can be retrieved with: ipconfig If it doesn’t workTry enable Port 22 netsh advfirewall firewall add rule name=\"Open SSH Port 22\" dir=in action=allow protocol=TCP localport=22 remoteip=any Try enabling Remote server listen on socket in VS Code. ","date":"2023-08-09","objectID":"/ssh-basics/:2:7","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#determining-the-hostname"},{"categories":["tricks"],"content":" Connecting to Windows in VS CodeTo connect, you need to know the username and hostname of the remote host. Determining the UsernameThe username typically matches the account name of the remote host, retrievable by: echo $env:USERNAME However, if you’re using a Microsoft account to log in, the username might be the associated email address. Determining the HostnameThe hostname, which is the IP address of the remote host, can be retrieved with: ipconfig If it doesn’t workTry enable Port 22 netsh advfirewall firewall add rule name=\"Open SSH Port 22\" dir=in action=allow protocol=TCP localport=22 remoteip=any Try enabling Remote server listen on socket in VS Code. ","date":"2023-08-09","objectID":"/ssh-basics/:2:7","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#if-it-doesnt-work"},{"categories":["tricks"],"content":" SSH Access to WSL2For a comprehensive guide, refer here. Since Windows uses port 22 by default for SSH, consider changing the SSH port in WSL2 to 2222 to prevent conflicts. ","date":"2023-08-09","objectID":"/ssh-basics/:3:0","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#ssh-access-to-wsl2"},{"categories":["tricks"],"content":" On the Remote Host (WSL2) # Install openssh-server sudo apt install openssh-server # Modify the SSH configuration to use port 2222 sudo sed -i -E 's,^#?Port.*$,Port 2222,' /etc/ssh/sshd_config sudo service ssh restart # Allow passwordless sudo for the current user to start the SSH service sudo sh -c \"echo '${USER} ALL=(root) NOPASSWD: /usr/sbin/service ssh start' \u003e/etc/sudoers.d/service-ssh-start\" # Start the SSH service without requiring a password sudo /usr/sbin/service ssh start ","date":"2023-08-09","objectID":"/ssh-basics/:3:1","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#on-the-remote-host-wsl2"},{"categories":["tricks"],"content":" On the Remote Host (Windows) Unblock Port 2222 New-NetFirewallRule -Name sshd -DisplayName 'OpenSSH Server (sshd) for WSL' -Enabled True -Direction Inbound -Protocol TCP -Action Allow -LocalPort 2222 Automatically Start SSHD ServiceCreate a CMD script to initiate the SSHD service in WSL2. @echo off setlocal C:\\Windows\\System32\\bash.exe -c \"sudo /usr/sbin/service ssh start\" C:\\Windows\\System32\\netsh.exe interface portproxy delete v4tov4 listenport=2022 listenaddress=0.0.0.0 protocol=tcp for /f %%i in ('wsl hostname -I') do set IP=%%i C:\\Windows\\System32\\netsh.exe interface portproxy add v4tov4 listenport=2022 listenaddress=0.0.0.0 connectport=2022 connectaddress=%IP% endlocal ","date":"2023-08-09","objectID":"/ssh-basics/:3:2","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#on-the-remote-host-windows"},{"categories":["tricks"],"content":" On the Remote Host (Windows) Unblock Port 2222 New-NetFirewallRule -Name sshd -DisplayName 'OpenSSH Server (sshd) for WSL' -Enabled True -Direction Inbound -Protocol TCP -Action Allow -LocalPort 2222 Automatically Start SSHD ServiceCreate a CMD script to initiate the SSHD service in WSL2. @echo off setlocal C:\\Windows\\System32\\bash.exe -c \"sudo /usr/sbin/service ssh start\" C:\\Windows\\System32\\netsh.exe interface portproxy delete v4tov4 listenport=2022 listenaddress=0.0.0.0 protocol=tcp for /f %%i in ('wsl hostname -I') do set IP=%%i C:\\Windows\\System32\\netsh.exe interface portproxy add v4tov4 listenport=2022 listenaddress=0.0.0.0 connectport=2022 connectaddress=%IP% endlocal ","date":"2023-08-09","objectID":"/ssh-basics/:3:2","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#unblock-port-2222"},{"categories":["tricks"],"content":" On the Remote Host (Windows) Unblock Port 2222 New-NetFirewallRule -Name sshd -DisplayName 'OpenSSH Server (sshd) for WSL' -Enabled True -Direction Inbound -Protocol TCP -Action Allow -LocalPort 2222 Automatically Start SSHD ServiceCreate a CMD script to initiate the SSHD service in WSL2. @echo off setlocal C:\\Windows\\System32\\bash.exe -c \"sudo /usr/sbin/service ssh start\" C:\\Windows\\System32\\netsh.exe interface portproxy delete v4tov4 listenport=2022 listenaddress=0.0.0.0 protocol=tcp for /f %%i in ('wsl hostname -I') do set IP=%%i C:\\Windows\\System32\\netsh.exe interface portproxy add v4tov4 listenport=2022 listenaddress=0.0.0.0 connectport=2022 connectaddress=%IP% endlocal ","date":"2023-08-09","objectID":"/ssh-basics/:3:2","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#automatically-start-sshd-service"},{"categories":["tricks"],"content":" Connecting to WSL2 ssh -p 2222 \u003cusername\u003e@\u003chostname\u003e Note that the username here is distinct from the Windows host username; it pertains to the Linux system. Determine it using: whoami The hostname, however, remains consistent with the Windows host. VS Code Remote - SSHEdit the ~/.ssh/config on the local client: Host \u003chostname\u003e HostName \u003cnickname_windows\u003e User \u003cusername_windows\u003e Port 22 Host \u003chostname\u003e HostName \u003cnickname_wsl\u003e User \u003cusername_wsl\u003e Port 2222 ","date":"2023-08-09","objectID":"/ssh-basics/:3:3","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#connecting-to-wsl2"},{"categories":["tricks"],"content":" Connecting to WSL2 ssh -p 2222 @ Note that the username here is distinct from the Windows host username; it pertains to the Linux system. Determine it using: whoami The hostname, however, remains consistent with the Windows host. VS Code Remote - SSHEdit the ~/.ssh/config on the local client: Host HostName User Port 22 Host HostName User Port 2222 ","date":"2023-08-09","objectID":"/ssh-basics/:3:3","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#vs-code-remote---ssh"},{"categories":["tricks"],"content":" Running Jupyter Lab on a Remote HostUse ssh to run jupyter lab on a remote host and access it from a local browser. ","date":"2023-08-09","objectID":"/ssh-basics/:4:0","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#running-jupyter-lab-on-a-remote-host"},{"categories":["tricks"],"content":" Redirect Traffic from Remote Port to Local PortIf you designate \u003cremote_port\u003e for the remote and \u003clocal_port\u003e for the local, redirect the traffic as: ssh -L \u003clocal_port\u003e:localhost:\u003cremote_port\u003e \u003cusername\u003e@\u003chostname\u003e ","date":"2023-08-09","objectID":"/ssh-basics/:4:1","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#redirect-traffic-from-remote-port-to-local-port"},{"categories":["tricks"],"content":" Running Jupyter Lab on the Remote Host jupyter lab --no-browser --port=\u003cremote_port\u003e ","date":"2023-08-09","objectID":"/ssh-basics/:4:2","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#running-jupyter-lab-on-the-remote-host"},{"categories":["tricks"],"content":" Using croc to Transfer FilesFor more details, consult this link. ","date":"2023-08-09","objectID":"/ssh-basics/:5:0","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#using-croc-to-transfer-files"},{"categories":["tricks"],"content":" On the Local MachineNavigate to the directory you wish to sync: croc send --code \u003ccode\u003e . ","date":"2023-08-09","objectID":"/ssh-basics/:5:1","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#on-the-local-machine"},{"categories":["tricks"],"content":" On the Remote MachineTo receive the files: croc --yes --overwrite \u003ccode\u003e ","date":"2023-08-09","objectID":"/ssh-basics/:5:2","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#on-the-remote-machine"},{"categories":["tricks"],"content":" Avoiding SSH passphrase promptTo avoid the SSH passphrase prompt, you can use ssh-add to add the key to the ssh-agent cache. ","date":"2023-08-09","objectID":"/ssh-basics/:6:0","series":[],"tags":["ssh","vscode"],"title":"SSH Basics","uri":"/ssh-basics/#avoiding-ssh-passphrase-prompt"},{"categories":null,"content":" Who am I? 🎓 A graduate student in Physics 🤔 Keen on learning the mechanism of the world ❤️ 穷且益坚，不坠青云之志 滕王阁序 时运不齐，命途多舛。冯唐易老，李广难封。屈贾谊于长沙，非无圣主；窜梁鸿于海曲，岂乏明时？所赖君子见机，达人知命。老当益壮，宁移白首之心？穷且益坚，不坠青云之志酌贪泉而觉爽，处涸辙以犹欢。北海虽赊，扶摇可接；东隅已逝，桑榆非晚。孟尝高洁，空余报国之情；阮籍猖狂，岂效穷途之哭！ 勃，三尺微命，一介书生。无路请缨，等终军之弱冠；有怀投笔，慕宗悫之长风。舍簪笏于百龄，奉晨昏于万里。非谢家之宝树，接孟氏之芳邻。他日趋庭，叨陪鲤对；今兹捧袂，喜托龙门。杨意不逢，抚凌云而自惜；钟期既遇，奏流水以何惭？ ","date":"2021-08-16","objectID":"/about/:1:0","series":null,"tags":null,"title":"About fakephysicist","uri":"/about/#who-am-i"},{"categories":["tossing"],"content":"In this post, I will show you how to build a personal website with Hugo and configure the theme DoIt. ","date":"2021-01-01","objectID":"/build-a-personal-website-with-hugo/:0:0","series":[],"tags":["hugo","doit"],"title":"Build a Personal Website with Hugo","uri":"/build-a-personal-website-with-hugo/#"},{"categories":["tossing"],"content":" Quick StartInstall Hugo and add the theme DoIt as a submodule of the hugo project. Create a new hugo project: hugo new site my_website cd my_website Initialize your project directory as a git repository, and add the theme repository as a submodule of your website directory: git init git submodule add https://github.com/HEIGE-PCloud/DoIt.git themes/DoIt Initialize the project: git submodule update --init --recursive, and finish the installation. Update the submodule: git submodule update --remote --merge. Create your first post! hugo new posts/hello-world.md. Preview your website: hugo server --disableFastRender -D. . ├── archetypes # markdown templates ├── assets # assets used to generate the website ├── content # website content, mainly posts ├── data # data files used to generate the website ├── public # static files generated by hugo, mainly publish this ├── resources # resources generated by hugo, not sure what it is ├── static # static files, e.g. images, thumbnails, etc. ├── themes # hugo themes └── hugo.toml # configuration file hugo.toml: The configuration of Hugo, including the configuration of the theme. See here for details. content: Save the content of the website, such as posts. . └── content └── about | └── index.md // \u003c- \u003chttps://example.com/about/\u003e ├── posts | ├── firstpost.md // \u003c- \u003chttps://example.com/posts/firstpost/\u003e | ├── happy | | └── ness.md // \u003c- \u003chttps://example.com/posts/happy/ness/\u003e | └── secondpost.md // \u003c- \u003chttps://example.com/posts/secondpost/\u003e └── quote ├── first.md // \u003c- \u003chttps://example.com/quote/first/\u003e └── second.md // \u003c- \u003chttps://example.com/quote/second/\u003e archetypes: Save the markdown templates of the posts, usually including the front matter of the posts. static: Save the static files used in the posts, these files will be copied to the public folder when generating the website. public: The static HTML, CSS, JS, etc. generated by the hugo command. This folder is mainly published on the server. ","date":"2021-01-01","objectID":"/build-a-personal-website-with-hugo/:1:0","series":[],"tags":["hugo","doit"],"title":"Build a Personal Website with Hugo","uri":"/build-a-personal-website-with-hugo/#quick-start"},{"categories":["tossing"],"content":" DeployWe can create two repositories on GitHub to deploy the website. Repository 1: A repository used to host the source files of the website project, set the permission to Private. We will spend most of our time on this repository. Repository 2: A repository used to host the static files generated by the website, set the permission to Public. The name of this repository should be {{your_github_username}}.github.io. For example, my GitHub username is fakephysicist, then the name of the repository I need to create is fakephysicist.github.io. In the settings of this repository, enable GitHub Pages, set Branch to main, and set the static file location to /(root). We will directly push the contents of the public folder generated by the hugo command to the / directory of the main branch. Create these two repositories on GitHub, and then follow the steps below to deploy the website. In the my_website directory, execute git submodule update --init --recursive to update the submodules to the latest state. In hugo.toml, set baseurl = https://fakephysicist.github.io/. Set the fakephysicist.github.io repository as a submodule and set it in the public folder. git submodule add -f -b main \u003chttps://github.com/fakephysicist/fakephysicist.github.io.git\u003e public Make sure the public folder is deleted. Make fakephysicist.github.io repository as a submodule, and set it in the public folder. git submodule add -f -b main https://github.com/fakephysicist/fakephysicist.github.io.git public Generate the website, and push the generated website to repository 2. hugo cd public git add . git commit -m \"Build website\" git push origin main cd .. rm -rf public Add, commit and push repository 1. git add . git commit -m \"Publish website\" git push -u origin master Next time you want to update the website, just execute the following script. #!/bin/bash # Ensure we exit on any error set -e # Function to check current directory is the root of the repository check_root_dir() { if [ ! -d \".git\" ]; then echo \"Error: The script needs to be run from the root of the repository.\" exit 1 fi } # Step 1: Update submodules check_root_dir git submodule update --init --recursive # Step 2: Ensure public folder is deleted and add the submodule repository if [ -d \"public\" ]; then rm -rf public fi git submodule add -f -b main git@github.com:fakephysicist/fakephysicist.github.io.git public # Step 3: Generate the website and push it to the submodule repository hugo cd public git add . git commit -m \"Build website\" git push origin main cd .. rm -rf public # Step 4: Add, commit and push the main repository git add . git commit -m \"Update website\" git push -u origin master echo \"Deployment completed successfully!\" ","date":"2021-01-01","objectID":"/build-a-personal-website-with-hugo/:2:0","series":[],"tags":["hugo","doit"],"title":"Build a Personal Website with Hugo","uri":"/build-a-personal-website-with-hugo/#deploy"},{"categories":["tossing"],"content":" Get current timestamp date +'%Y-%m-%dT%H:%M:%S%z' | sed 's/\\(..\\)$/:\\1/' ","date":"2021-01-01","objectID":"/build-a-personal-website-with-hugo/:3:0","series":[],"tags":["hugo","doit"],"title":"Build a Personal Website with Hugo","uri":"/build-a-personal-website-with-hugo/#get-current-timestamp"},{"categories":null,"content":" Stay","date":"0001-01-01","objectID":"/love/:0:0","series":null,"tags":null,"title":"","uri":"/love/#stay"},{"categories":null,"content":" Since 2019/8/14","date":"0001-01-01","objectID":"/since/:0:0","series":null,"tags":null,"title":"","uri":"/since/#since-2019814"},{"categories":null,"content":" You have been here for ","date":"0001-01-01","objectID":"/since/:1:0","series":null,"tags":null,"title":"","uri":"/since/#you-have-been-here-for"},{"categories":null,"content":" You are not connected to the Internet, only cached pages are available. ","date":"0001-01-01","objectID":"/offline/:0:0","series":null,"tags":null,"title":"Offline","uri":"/offline/#"}]